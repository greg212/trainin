http://www.geeksforgeeks.org/sum-of-two-linked-lists/

Indexing a book. Write a program that reads in a text file from standard input and compiles an alphabetical
index of which words appear on which lines, as in the following input. 
Ignore case and punctuation. Similar to FrequencyCount, but for each word maintain a list of location on which it appears.

ASSIGNMENT 1)
Reverse a linked list. Write a function that takes the first Node in a linked list, reverse it, and returns the first Node in the resulting linked list.

Solution. To accomplish this, we maintain references to three consecutive nodes in the linked list, reverse, first, and second. At each iteration we extract the node first from the original linked list and insert it at the beginning of the reversed list. We maintain the invariant that first is the first node of what's left of the original list, second is the second node of what's left of the original list, and reverse is the first node of the resulting reversed list.

Reverse a linked list

    public static Node reverse(Node list) {
       if (first == null || first.next == null) return first;
       Node first   = list;
       Node reverse = null;
       while (first != null) {
          Node second = first.next;
          first.next  = reverse;
          reverse     = first;
          first       = second;
       }
       return reverse;
    }

ASSIGNMENT 2)
	Mth-to-Last Element of a Singly Linked List
	
	1) calculate size (n) of list - traverse, storing each node, checking is this end, if not use node's NEXT pointer 
	2) element = n - m - traverse
	
ASSIGNMENT 3)

Start slow pointer at the head of the list
Start fast pointer at second node
Loop infinitely

If the fast pointer reaches a null pointer
Return that the list is null terminated
If the fast pointer moves onto or over the slow pointer
Return that there is a cycle
Advance the slow pointer one node
Advance the fast pointer two nodes

ASSIGNMENT 4)

http://www.geeksforgeeks.org/remove-duplicates-from-an-unsorted-linked-list/
Remove duplicates from unsorted list

http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html